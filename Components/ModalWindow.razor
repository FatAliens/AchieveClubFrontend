@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Components

<div class="modal @ModalClass" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" aria-label="Close" @onclick="CloseModal">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @ChildContent
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public EventCallback<bool> IsVisibleChanged { get; set; }

    private string ModalClass => IsVisible ? "show" : "";

    private void CloseModal()
    {
        IsVisible = false;
        IsVisibleChanged.InvokeAsync(IsVisible);
        NavigationManager.NavigateTo(NavigationManager.Uri, true);
    }
}
